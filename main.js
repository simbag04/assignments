(()=>{"use strict";var n={28:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),a=t.n(r),i=t(645),o=t.n(i)()(a());o.push([n.id,":root\n{\n    --header-background: #1565c0; \n    --darker-background: #bbdefb;\n    --middle-background: #FFFFFF;\n    --light-background: #e3f2fd;\n\n    /* PREV COLORS: \n    --header-background: #595959;\n    --middle-background: #cccccc;\n    --darker-background: #ced4da;\n    --light-background: #e9ecef;\n    */\n}\n\nhtml {\n    height: fit-content;\n    min-height: 100vh;\n    width: 100%;\n}\n\n/* BODY LAYOUT FORMATTING*/\nbody\n{\n    display: grid;\n    grid-template-rows: auto 1fr;\n    grid-template-columns: 1fr;\n    align-items: stretch;\n    justify-content: stretch;\n    margin: 0;\n    font-family: Arial, Helvetica, sans-serif;\n    height: 100%;\n    width: 100%;\n}\n\n.main {\n    position: relative;\n    width: 100%;\n}\n\n\n/* HEADER FORMATTING*/\n.header\n{\n    grid-column: 1 / 3;\n    font-size: 40px;\n    padding: 20px 0px;\n    background-color: var(--header-background);\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n}\n\n/* TITLES */\n.title\n{\n    font-size: 24px;\n    text-align: center;\n    padding: 10px;\n    font-weight: bold;\n}\n\n.popup-title\n{\n    display: flex;\n    padding: 0px 0px;\n    align-items: center;\n    justify-content: center;\n}\n\n.small-title\n{\n    font-size: 20px;\n}\n\n.matrix-popup-close-button \n{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n/* buttons styling */\n.big-button\n{\n    padding: 10px;\n    font-size: 16px;\n    border: 2px solid black;\n    color: black;\n    background-color: var(--darker-background);\n    font-weight: bold;\n    border-radius: 5px;\n    width: 100%;\n}\n\n.small-button\n{\n    font-size: 14px;\n    color: black;\n    border-radius: 3px;\n    padding: 3px 5px;\n    font-weight: bold;\n}\n\n.popup-button {\n    padding: 4px 10px;\n}\n\n.buttons {\n    display: flex;\n    gap: 10px;\n}\nbutton:hover, .small-button:hover\n{\n    background-color: var(--header-background);\n    border: 2px solid var(--header-background);\n    color: white;\n}\n\n/* svgs styling */\nsvg\n{\n    width: 1.2rem;\n    height: auto;\n}\n\n.svg\n{\n    display: flex;\n    align-items: center;\n}\n\nsvg:hover\n{\n    fill: red;\n}\n\n/* MATRIX POPUP */\n.popup\n{\n    position: absolute;\n    top: 2%;\n    left: 50%;\n    transform: translateX(-50%);\n    padding: 20px;\n    background-color: var(--middle-background);\n    display: none;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.matrix-table\n{\n    border-collapse: collapse;\n    \n}\n\n.matrix-table input\n{\n    border: none;\n    font-size: 12px;\n}\n\n.matrix-table th\n{\n    font-size: 11px;\n}\n\n.matrix-table td\n{\n    border: 2px solid black;\n    margin: 0;\n    padding: 0;\n}\n\n.matrix-table input[type='number']\n{\n    width: 1em;\n    text-align: center;\n}\n\n.td-div\n{\n    display: flex;\n}\n\n/* coloring for matrix cells */\n.lightgray\n{\n    background-color: var(--darker-background);\n}\n\n.green\n{\n    background-color: green;\n    font-weight: bold;\n    color: white;\n}\n\n.sub-member-input-div, .sub-text-assignments-div\n{\n    padding: 20px;\n}\n\n/* Member Input Styling*/\n.member-input\n{\n    display: flex;\n    gap: 40px;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n}\n\n.member-input-div\n{\n    background-color: var(--middle-background);\n    width: 100%;\n}\n\n.member-info-input\n{\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n}\n\n/* war size/buttons styling */\n.war-size-input\n{\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    align-self: start;\n}\n\n#war-size-dropdown\n{\n    padding: 10px;\n    font-size: 16px;\n    font-weight: bold;\n    text-align: center;\n    border: 2px solid black;\n    background-color: var(--darker-background);\n    border-radius: 5px;\n}\n\n#war-size-dropdown option\n{\n    padding: 0px;\n}\n\n.member-input-buttons\n{\n    align-self: start;\n    display: flex;\n    gap: 10px;\n    flex-direction: column;\n    align-items: center;\n}\n\n#total-stars\n{\n    min-width: 100%;\n    width: 0;\n}\n\n/* Individual capabilities styling */\n.member-capability-popup\n{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n/* table layout styling */\n.standard-table\n{\n    padding: 10px;\n    border-collapse: collapse;\n    border: 2px solid var(--header-background);\n}\n\n.standard-table td\n{\n    padding: 5px 3px;\n}\n\n.standard-table .hidden-td \n{\n    padding: 0px;\n}\n\n.standard-table th\n{\n    font-size: 16px;\n    padding: 8px 5px;\n}\n\n/* set size of input fields */\n.standard-table input\n{\n    font-size: 16px;\n    text-align: center;\n}\n\n.member-info-input .th\n{\n    width: 2em;\n}\n\n.name-input\n{\n    width: 6em;\n}\n\n/* right and left padding for each row */\ntd.first-td\n{\n    padding-left: 8px;\n    padding-right: 8px;\n}\n\n\n.last-td\n{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.standard-table .last-th \n{\n    padding-right: 10px;\n    padding-left: 10px;\n}\n\n\n.first-td\n{\n    margin-left: 5px;\n    margin-right: 5px;\n    border: none;\n    text-align: center;\n    width: 2em;\n}\n\n/* shading of rows */\n.odd-row th\n{\n    background-color: var(--header-background);\n    color: white;\n}\n\n.odd-row td, .odd-row .pos, .odd-row input\n{\n    background-color: var(--light-background);\n    border: none;\n}\n\n.odd-row button\n{\n    background-color: var(--light-background);\n    border: 2px solid var(--light-background);\n}\n\n.even-row td, .even-row .pos, .even-row input\n{\n    background-color: var(--darker-background);\n    border: none;\n}\n\n.even-row button\n{\n    background-color: var(--darker-background);\n    border: 2px solid var(--darker-background);\n}\n\n.header-row .cap-assignment-header\n{\n    padding-left: 5px;\n    padding-right: 5px;\n}\n\n.assignment-td\n{\n    font-weight: bold;\n    text-align: center;\n}\n\n/* general input styling */\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;;IAEI,4BAA4B;IAC5B,4BAA4B;IAC5B,4BAA4B;IAC5B,2BAA2B;;IAE3B;;;;;KAKC;AACL;;AAEA;IACI,mBAAmB;IACnB,iBAAiB;IACjB,WAAW;AACf;;AAEA,0BAA0B;AAC1B;;IAEI,aAAa;IACb,4BAA4B;IAC5B,0BAA0B;IAC1B,oBAAoB;IACpB,wBAAwB;IACxB,SAAS;IACT,yCAAyC;IACzC,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,kBAAkB;IAClB,WAAW;AACf;;;AAGA,qBAAqB;AACrB;;IAEI,kBAAkB;IAClB,eAAe;IACf,iBAAiB;IACjB,0CAA0C;IAC1C,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,WAAW;AACf;;AAEA,WAAW;AACX;;IAEI,eAAe;IACf,kBAAkB;IAClB,aAAa;IACb,iBAAiB;AACrB;;AAEA;;IAEI,aAAa;IACb,gBAAgB;IAChB,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;;IAEI,eAAe;AACnB;;AAEA;;IAEI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA,oBAAoB;AACpB;;IAEI,aAAa;IACb,eAAe;IACf,uBAAuB;IACvB,YAAY;IACZ,0CAA0C;IAC1C,iBAAiB;IACjB,kBAAkB;IAClB,WAAW;AACf;;AAEA;;IAEI,eAAe;IACf,YAAY;IACZ,kBAAkB;IAClB,gBAAgB;IAChB,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,SAAS;AACb;AACA;;IAEI,0CAA0C;IAC1C,0CAA0C;IAC1C,YAAY;AAChB;;AAEA,iBAAiB;AACjB;;IAEI,aAAa;IACb,YAAY;AAChB;;AAEA;;IAEI,aAAa;IACb,mBAAmB;AACvB;;AAEA;;IAEI,SAAS;AACb;;AAEA,iBAAiB;AACjB;;IAEI,kBAAkB;IAClB,OAAO;IACP,SAAS;IACT,2BAA2B;IAC3B,aAAa;IACb,0CAA0C;IAC1C,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;;IAEI,yBAAyB;;AAE7B;;AAEA;;IAEI,YAAY;IACZ,eAAe;AACnB;;AAEA;;IAEI,eAAe;AACnB;;AAEA;;IAEI,uBAAuB;IACvB,SAAS;IACT,UAAU;AACd;;AAEA;;IAEI,UAAU;IACV,kBAAkB;AACtB;;AAEA;;IAEI,aAAa;AACjB;;AAEA,8BAA8B;AAC9B;;IAEI,0CAA0C;AAC9C;;AAEA;;IAEI,uBAAuB;IACvB,iBAAiB;IACjB,YAAY;AAChB;;AAEA;;IAEI,aAAa;AACjB;;AAEA,wBAAwB;AACxB;;IAEI,aAAa;IACb,SAAS;IACT,mBAAmB;IACnB,uBAAuB;IACvB,WAAW;AACf;;AAEA;;IAEI,0CAA0C;IAC1C,WAAW;AACf;;AAEA;;IAEI,aAAa;IACb,uBAAuB;IACvB,sBAAsB;AAC1B;;AAEA,6BAA6B;AAC7B;;IAEI,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,iBAAiB;AACrB;;AAEA;;IAEI,aAAa;IACb,eAAe;IACf,iBAAiB;IACjB,kBAAkB;IAClB,uBAAuB;IACvB,0CAA0C;IAC1C,kBAAkB;AACtB;;AAEA;;IAEI,YAAY;AAChB;;AAEA;;IAEI,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;;IAEI,eAAe;IACf,QAAQ;AACZ;;AAEA,oCAAoC;AACpC;;IAEI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;AACA,yBAAyB;AACzB;;IAEI,aAAa;IACb,yBAAyB;IACzB,0CAA0C;AAC9C;;AAEA;;IAEI,gBAAgB;AACpB;;AAEA;;IAEI,YAAY;AAChB;;AAEA;;IAEI,eAAe;IACf,gBAAgB;AACpB;;AAEA,6BAA6B;AAC7B;;IAEI,eAAe;IACf,kBAAkB;AACtB;;AAEA;;IAEI,UAAU;AACd;;AAEA;;IAEI,UAAU;AACd;;AAEA,wCAAwC;AACxC;;IAEI,iBAAiB;IACjB,kBAAkB;AACtB;;;AAGA;;IAEI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;;IAEI,mBAAmB;IACnB,kBAAkB;AACtB;;;AAGA;;IAEI,gBAAgB;IAChB,iBAAiB;IACjB,YAAY;IACZ,kBAAkB;IAClB,UAAU;AACd;;AAEA,oBAAoB;AACpB;;IAEI,0CAA0C;IAC1C,YAAY;AAChB;;AAEA;;IAEI,yCAAyC;IACzC,YAAY;AAChB;;AAEA;;IAEI,yCAAyC;IACzC,yCAAyC;AAC7C;;AAEA;;IAEI,0CAA0C;IAC1C,YAAY;AAChB;;AAEA;;IAEI,0CAA0C;IAC1C,0CAA0C;AAC9C;;AAEA;;IAEI,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;;IAEI,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA,0BAA0B;AAC1B;;EAEE,wBAAwB;EACxB,SAAS;AACX",sourcesContent:[":root\n{\n    --header-background: #1565c0; \n    --darker-background: #bbdefb;\n    --middle-background: #FFFFFF;\n    --light-background: #e3f2fd;\n\n    /* PREV COLORS: \n    --header-background: #595959;\n    --middle-background: #cccccc;\n    --darker-background: #ced4da;\n    --light-background: #e9ecef;\n    */\n}\n\nhtml {\n    height: fit-content;\n    min-height: 100vh;\n    width: 100%;\n}\n\n/* BODY LAYOUT FORMATTING*/\nbody\n{\n    display: grid;\n    grid-template-rows: auto 1fr;\n    grid-template-columns: 1fr;\n    align-items: stretch;\n    justify-content: stretch;\n    margin: 0;\n    font-family: Arial, Helvetica, sans-serif;\n    height: 100%;\n    width: 100%;\n}\n\n.main {\n    position: relative;\n    width: 100%;\n}\n\n\n/* HEADER FORMATTING*/\n.header\n{\n    grid-column: 1 / 3;\n    font-size: 40px;\n    padding: 20px 0px;\n    background-color: var(--header-background);\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n}\n\n/* TITLES */\n.title\n{\n    font-size: 24px;\n    text-align: center;\n    padding: 10px;\n    font-weight: bold;\n}\n\n.popup-title\n{\n    display: flex;\n    padding: 0px 0px;\n    align-items: center;\n    justify-content: center;\n}\n\n.small-title\n{\n    font-size: 20px;\n}\n\n.matrix-popup-close-button \n{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n/* buttons styling */\n.big-button\n{\n    padding: 10px;\n    font-size: 16px;\n    border: 2px solid black;\n    color: black;\n    background-color: var(--darker-background);\n    font-weight: bold;\n    border-radius: 5px;\n    width: 100%;\n}\n\n.small-button\n{\n    font-size: 14px;\n    color: black;\n    border-radius: 3px;\n    padding: 3px 5px;\n    font-weight: bold;\n}\n\n.popup-button {\n    padding: 4px 10px;\n}\n\n.buttons {\n    display: flex;\n    gap: 10px;\n}\nbutton:hover, .small-button:hover\n{\n    background-color: var(--header-background);\n    border: 2px solid var(--header-background);\n    color: white;\n}\n\n/* svgs styling */\nsvg\n{\n    width: 1.2rem;\n    height: auto;\n}\n\n.svg\n{\n    display: flex;\n    align-items: center;\n}\n\nsvg:hover\n{\n    fill: red;\n}\n\n/* MATRIX POPUP */\n.popup\n{\n    position: absolute;\n    top: 2%;\n    left: 50%;\n    transform: translateX(-50%);\n    padding: 20px;\n    background-color: var(--middle-background);\n    display: none;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.matrix-table\n{\n    border-collapse: collapse;\n    \n}\n\n.matrix-table input\n{\n    border: none;\n    font-size: 12px;\n}\n\n.matrix-table th\n{\n    font-size: 11px;\n}\n\n.matrix-table td\n{\n    border: 2px solid black;\n    margin: 0;\n    padding: 0;\n}\n\n.matrix-table input[type='number']\n{\n    width: 1em;\n    text-align: center;\n}\n\n.td-div\n{\n    display: flex;\n}\n\n/* coloring for matrix cells */\n.lightgray\n{\n    background-color: var(--darker-background);\n}\n\n.green\n{\n    background-color: green;\n    font-weight: bold;\n    color: white;\n}\n\n.sub-member-input-div, .sub-text-assignments-div\n{\n    padding: 20px;\n}\n\n/* Member Input Styling*/\n.member-input\n{\n    display: flex;\n    gap: 40px;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n}\n\n.member-input-div\n{\n    background-color: var(--middle-background);\n    width: 100%;\n}\n\n.member-info-input\n{\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n}\n\n/* war size/buttons styling */\n.war-size-input\n{\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    align-self: start;\n}\n\n#war-size-dropdown\n{\n    padding: 10px;\n    font-size: 16px;\n    font-weight: bold;\n    text-align: center;\n    border: 2px solid black;\n    background-color: var(--darker-background);\n    border-radius: 5px;\n}\n\n#war-size-dropdown option\n{\n    padding: 0px;\n}\n\n.member-input-buttons\n{\n    align-self: start;\n    display: flex;\n    gap: 10px;\n    flex-direction: column;\n    align-items: center;\n}\n\n#total-stars\n{\n    min-width: 100%;\n    width: 0;\n}\n\n/* Individual capabilities styling */\n.member-capability-popup\n{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n/* table layout styling */\n.standard-table\n{\n    padding: 10px;\n    border-collapse: collapse;\n    border: 2px solid var(--header-background);\n}\n\n.standard-table td\n{\n    padding: 5px 3px;\n}\n\n.standard-table .hidden-td \n{\n    padding: 0px;\n}\n\n.standard-table th\n{\n    font-size: 16px;\n    padding: 8px 5px;\n}\n\n/* set size of input fields */\n.standard-table input\n{\n    font-size: 16px;\n    text-align: center;\n}\n\n.member-info-input .th\n{\n    width: 2em;\n}\n\n.name-input\n{\n    width: 6em;\n}\n\n/* right and left padding for each row */\ntd.first-td\n{\n    padding-left: 8px;\n    padding-right: 8px;\n}\n\n\n.last-td\n{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.standard-table .last-th \n{\n    padding-right: 10px;\n    padding-left: 10px;\n}\n\n\n.first-td\n{\n    margin-left: 5px;\n    margin-right: 5px;\n    border: none;\n    text-align: center;\n    width: 2em;\n}\n\n/* shading of rows */\n.odd-row th\n{\n    background-color: var(--header-background);\n    color: white;\n}\n\n.odd-row td, .odd-row .pos, .odd-row input\n{\n    background-color: var(--light-background);\n    border: none;\n}\n\n.odd-row button\n{\n    background-color: var(--light-background);\n    border: 2px solid var(--light-background);\n}\n\n.even-row td, .even-row .pos, .even-row input\n{\n    background-color: var(--darker-background);\n    border: none;\n}\n\n.even-row button\n{\n    background-color: var(--darker-background);\n    border: 2px solid var(--darker-background);\n}\n\n.header-row .cap-assignment-header\n{\n    padding-left: 5px;\n    padding-right: 5px;\n}\n\n.assignment-td\n{\n    font-weight: bold;\n    text-align: center;\n}\n\n/* general input styling */\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n"],sourceRoot:""}]);const A=o},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,i){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(r)for(var A=0;A<this.length;A++){var l=this[A][0];null!=l&&(o[l]=!0)}for(var d=0;d<n.length;d++){var s=[].concat(n[d]);r&&o[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),a&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=a):s[4]="".concat(a)),e.push(s))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(a," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},o=[],A=0;A<n.length;A++){var l=n[A],d=r.base?l[0]+r.base:l[0],s=i[d]||0,u="".concat(d," ").concat(s);i[d]=s+1;var p=t(u),c={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)e[p].references++,e[p].updater(c);else{var g=a(c,r);r.byIndex=A,e.splice(A,0,{identifier:u,updater:g,references:1})}o.push(u)}return o}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var i=r(n=n||[],a=a||{});return function(n){n=n||[];for(var o=0;o<i.length;o++){var A=t(i[o]);e[A].references--}for(var l=r(n,a),d=0;d<i.length;d++){var s=t(i[d]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}i=l}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{const n=(()=>{let n=[],e=[],t=[],r=[],a=[],i=[],o=[];const A=()=>{let a=Number.MAX_SAFE_INTEGER;for(let r=0;r<n.length;r++)0!=t[r]&&(a=Math.min(a,t[r])),0!=e[r]&&(a=Math.min(a,e[r]));for(let i=0;i<n.length;i++)for(let A=0;A<n.length;A++)if(0==n[i][A]&&0==r[i][A]&&(t[i]==a||e[A]==a)){r[i][A]|=1,t[i]=0,e[A]=0,o[i]=A;for(let a=0;a<n.length;a++)0==n[a][A]&&0==r[a][A]&&(r[a][A]|=2,t[a]--),0==n[i][a]&&0==r[i][a]&&(r[i][a]|=2,e[a]--);return}},l=()=>{for(let e=0;e<n.length;e++)-1===o[e]&&(a[e]=!0)},d=()=>{let e=!1;for(let t=0;t<n.length;t++)if(!i[t])for(let r=0;r<n.length;r++)if(0===n[r][t]&&a[r]){i[t]=!0,e=!0;break}for(let t=0;t<n.length;t++)a[t]||i[o[t]]&&(a[t]=!0,e=!0);return e},s=()=>{let e=Number.MAX_SAFE_INTEGER;for(let t=0;t<n.length;t++)for(let r=0;r<n.length;r++)a[t]||i[r]||(e=Math.min(e,n[t][r]));for(let t=0;t<n.length;t++)for(let r=0;r<n.length;r++)a[t]||i[r]?a[t]&&i[r]&&(n[t][r]+=e):n[t][r]-=e},u=(e,t)=>{let r=t?n[e][0]:n[0][e];for(let a=0;a<n.length;a++)r=Math.min(t?n[e][a]:n[a][e],r);return r},p=()=>{for(let r=0;r<n.length;r++)for(let a=0;a<n.length;a++)0==n[r][a]&&(t[r]++,e[a]++)},c=n=>{let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e},g=()=>{let e=0;for(let t=0;t<n.length;t++)-1!=o[t]&&e++;return e},b=()=>{for(let e=0;e<n.length;e++)a[e]=!a[e]},m=()=>{let A=n.length;e=Array(A).fill(0),t=Array(A).fill(0),r=Array(A).fill().map((()=>Array(A).fill(0))),a=Array(A).fill(!1),i=Array(A).fill(!1),o=Array(A).fill(-1)};return{initialize:A=>{let l=A.length;n=A,e=Array(l).fill(0),t=Array(l).fill(0),r=Array(l).fill().map((()=>Array(l).fill(0))),a=Array(l).fill(!1),i=Array(l).fill(!1),o=Array(l).fill(-1)},makeAssignments:()=>{for((()=>{for(let e=0;e<n.length;e++){let t=u(e,!0);for(let r=0;r<n.length;r++)n[e][r]-=t}for(let e=0;e<n.length;e++){let t=u(e,!1);for(let r=0;r<n.length;r++)n[r][e]-=t}})(),p();0!=c(t);)A();for(;g()!=n.length;){l();let n=!0;for(;n;)n=d();for(b(),s(),m(),p();0!=c(t);)A()}},getAssignments:()=>o}})(),e=(()=>{let n=[3,3,3,3,3,3,3,3],e=[2,3,3,3,3,3,3,3],t=[2,3,3,3,3,3,3,3],r=[2,2,3,3,3,3,3,3],a=[2,2,3,3,3,3,3,3],i=[1,2,2,3,3,3,3,3],o=[1,2,2,3,3,3,3,3],A=[1,1,2,2,3,3,3,3],l=[1,1,2,2,3,3,3,3],d=[0,1,1,2,2,3,3,3];const s=s=>{switch(s){case"15+":return u(n);case"15-":return u(e);case"14+":return u(t);case"14-":return u(r);case"13+":return u(a);case"13-":return u(i);case"12+":return u(o);case"12-":return u(A);case"11+":return u(l);case"11-":return u(d);default:return[0,0,0,0,0,0,0,0]}},u=n=>n.map((n=>n));return{getArray:s,changeArray:(n,e,t)=>{s(n)[e]=t}}})();function r(n,t,r){this.name=n,this.memberTH=t,this.opponentTH=r,this.capabilities=e.getArray(t)}r.prototype.editCapability=function(n,e){this.capabilities[15-Number(n)]=e},r.prototype.resetCapability=function(){this.capabilities=e.getArray(this.memberTH)};const a=(()=>{let n=[];const e=(e,t)=>{n.splice(e,0,t)};return{addMember:(t,r)=>{r>n.length?n.push(t):e(r-1,t)},getLineup:()=>n,reset:()=>{n=[]},removeMember:e=>{n.splice(e,1)},replaceMember:(e,t)=>{n[t]=e},insertAtIndex:e}})(),i=(()=>{let n=null,e=a.getLineup();const t=n=>15-n;return{generate:()=>{e=a.getLineup();let r=e.length;n=Array(r).fill().map((()=>Array(r).fill(0)));for(let a=0;a<r;a++)for(let i=0;i<r;i++){let r=t(e[i].opponentTH);n[a][i]=e[a].capabilities[r]}return n},getMatrix:()=>n,setMatrix:(e,t,r)=>(n[e][t]=r,n),getMatrixToMaximize:()=>{let t=e.length,r=Array(t).fill().map((()=>Array(t).fill(0)));for(let e=0;e<t;e++)for(let a=0;a<t;a++)r[e][a]=-1*n[e][a]+3;return r},regenerateForMember:r=>{e=a.getLineup();let i=e.length;for(let a=0;a<i;a++){let i=t(e[a].opponentTH);n[r][a]=e[r].capabilities[i]}}}})(),o={getStorage:()=>{let n=localStorage.getItem("lineup");if(null!=n){let e=JSON.parse(n);for(let n=0;n<e.length;n++){let t=e[n];if(null!=t){let e=new r(t.name,t.memberTH,t.opponentTH);e.capabilities=t.capabilities,a.addMember(e,n+1)}}}else(()=>{let n=new r("North","15-",15),e=new r("Kam","15-",15),t=new r("Sparker","15-",15),i=new r("Sim","15-",15),o=new r("Womps","15-",15),A=new r("Park","13-",13),l=new r("Jose","14-",14),d=new r("Hydro","13+",13),s=new r("Vik","13+",13),u=new r("Miller","13-",13),p=new r("Aoja","13+",13),c=new r("Risk","13+",13),g=new r("H2","13+",13),b=new r("Thinking","13+",13),m=new r("Wizard","13+",13),f=new r("Pink","12-",12),h=new r("Stephen","12+",12),C=new r("Superman","12-",12),B=new r("Verit","12-",12),I=new r("Coffee","12-",12),x=new r("Kurz","12+",12),y=new r("Thunder","12-",12),v=new r("Rob","12-",12),w=new r("Rize","12-",12),k=new r("Hulk","12+",12),E=new r("Quank","12+",12),M=new r("Shonnen","12+",12),S=new r("Havik","12+",12),T=new r("Peezy","12-",12),L=new r("LilDro","12+",12);a.addMember(n,1),a.addMember(e,2),a.addMember(t,3),a.addMember(i,4),a.addMember(o,5),a.addMember(A,6),a.addMember(l,7),a.addMember(d,8),a.addMember(s,9),a.addMember(u,10),a.addMember(p,11),a.addMember(c,12),a.addMember(g,13),a.addMember(b,14),a.addMember(m,15),a.addMember(f,16),a.addMember(h,17),a.addMember(C,18),a.addMember(B,19),a.addMember(I,20),a.addMember(x,21),a.addMember(y,22),a.addMember(v,23),a.addMember(w,24),a.addMember(k,25),a.addMember(E,26),a.addMember(M,27),a.addMember(S,28),a.addMember(T,29),a.addMember(L,30)})()},setStorage:()=>{localStorage.setItem("lineup",JSON.stringify(a.getLineup()))}},A=(()=>{const e=document.querySelector("body"),t=()=>{let n=document.querySelector(".member-input");b("member-info-input",n);let e=b("member-input-buttons",n);b("war-size-input",e),A(),m("button","","Assign",e,"big-button","member-input-submit").setAttribute("type","submit");let t=m("button","copy-button","Copy",e,"big-button");t.setAttribute("type","button"),t.display="none",t.addEventListener("click",(()=>{navigator.clipboard.writeText(c()),t.textContent="Copied!"})),m("div","total-stars","",e,"title"),l(),n.addEventListener("submit",(n=>{n.preventDefault();let e=document.querySelector("#war-size-dropdown"),t=e.options[e.selectedIndex].value,r=a.getLineup();for(;t<r.length;)a.removeMember(t);i.generate(),p(),u()}))},A=()=>{let n=document.querySelector(".war-size-input");n.innerHTML="",b("title",n).textContent="War Size";let e=m("select","war-size-dropdown","",n);m("option","",30,e).setAttribute("value",30),m("option","",15,e).setAttribute("value",15),e.addEventListener("change",(()=>{l()}))},l=()=>{let n=document.querySelector(".member-info-input");n.innerHTML="",b("title",n).textContent="Members";let e=m("table","","",n,"standard-table"),t=m("tr","","",e,"odd-row","header-row");m("th","","Pos",t),m("th","","Name",t),m("th","target-header","",t,"assignment-header","hidden-td"),m("th","stars-header","",t,"assignment-header","hidden-td"),m("th","","TH",t),m("th","","Opp",t),t.appendChild(document.createElement("th")),t.appendChild(document.createElement("th"));let A=document.querySelector("#war-size-dropdown"),u=A.options[A.selectedIndex].value;for(let n=0;n<u;n++){let t=m("tr","row-"+n,"",e);n%2==0?t.classList.add("even-row"):t.classList.add("odd-row");let A=m("td","","",t),s=m("input","num-"+n,"",A,"pos","first-td");s.setAttribute("type","number"),s.setAttribute("required",!0),s.setAttribute("min",1),s.setAttribute("max",u),s.value=n+1,s.addEventListener("change",(()=>{if(""==s.value)s.value=n+1;else{let e=a.getLineup()[n];a.removeMember(n),a.addMember(e,Number(s.value)),s.value=n+1}l()}));let p=m("td","","",t),c=m("input","name-"+n,"",p,"name-input");c.setAttribute("type","text"),c.setAttribute("required",!0),c.addEventListener("change",(()=>{let e=a.getLineup()[n];if(null!=e){let t=e;t.name=c.value,a.replaceMember(t,n),o.setStorage()}})),m("td","target-"+n,"",t,"assignment-td","hidden-td"),m("td","stars-"+n,"",t,"assignment-td","hidden-td");let b=m("td","","",t),f=m("input","th-"+n,"",b,"th");f.setAttribute("type","text"),f.setAttribute("required",!0),f.setAttribute("pattern","1([1-5])([+]|-)"),f.addEventListener("change",(()=>{let e=a.getLineup()[n];if(null==e){let e=new r(c.value,f.value,B.value);a.replaceMember(e,n)}else e.memberTH=f.value,e.resetCapability(),a.replaceMember(e,n);o.setStorage()}));let C=m("td","","",t),B=m("input","oppTh-"+n,"",C,"th");B.setAttribute("type","number"),B.setAttribute("required",!0),B.setAttribute("min",8),B.setAttribute("max",15),B.addEventListener("change",(()=>{let e=a.getLineup()[n];if(null!=e){let t=e;t.opponentTH=B.value,a.replaceMember(t,n),o.setStorage()}""!=document.querySelector("#target-1").textContent&&(i.generate(),x())}));let y=m("td","","",t),v=m("button","","Edit",y,"small-button");v.setAttribute("type","button"),v.addEventListener("click",(()=>{null!=a.getLineup()[n]&&(g(n),h())}));let w=m("td","","",t),k=m("div","","",w,"svg","delete","last-td");k.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><title>trash-can-outline</title><path d="M9,3V4H4V6H5V19A2,2 0 0,0 7,21H17A2,2 0 0,0 19,19V6H20V4H15V3H9M7,6H17V19H7V6M9,8V17H11V8H9M13,8V17H15V8H13Z" /></svg>',k.addEventListener("click",(()=>{a.removeMember(n),a.addMember(null,u),o.setStorage(),l()})),f.addEventListener("input",(()=>{d(f.id,"Please enter a TH level followed by +/- (ex. 15+)")})),f.addEventListener("change",(()=>{d(f.id,"Please enter a TH level followed by +/- (ex. 15+)")})),I()}s()},d=(n,e)=>{let t=document.getElementById(n);t.validity.patternMismatch?t.setCustomValidity(e):t.setCustomValidity("")},s=()=>{let n=a.getLineup(),e=document.querySelector("#war-size-dropdown"),t=e.options[e.selectedIndex].value;for(let e=0;e<Math.min(n.length,t);e++){let t=n[e];document.getElementById("name-"+e).value=null==t?"":t.name,document.getElementById("th-"+e).value=null==t?"":t.memberTH,document.getElementById("oppTh-"+e).value=null==t?"":t.opponentTH}},u=()=>{const e=document.querySelector(".assignments");e.innerHTML="",n.initialize(i.getMatrixToMaximize()),n.makeAssignments();const t=n.getAssignments(),r=i.getMatrix();let o=r.length,A=(m("div","","Assignments",e,"popup-title","title"),m("table","","",e,"matrix-table")),l=m("tr","","",A);m("th","","",l);for(let n=0;n<o;n++)m("th","",n+1,l);for(let n=0;n<o;n++){let e=m("tr","","",A);m("th","",a.getLineup()[n].name,e);let l=t[n];for(let t=0;t<o;t++){let a=m("td","","",e),o=b("td-div",a),A=m("input","matrix-"+n+"-"+t,"",o);A.setAttribute("type","number"),A.value=r[n][t],l===t&&A.classList.add("green"),(n+t)%2==0?A.classList.add("lightgray"):A.classList.add("white"),A.addEventListener("change",(()=>{i.setMatrix(n,t,A.value),u(),p()}))}}f(e,"Close")},p=()=>{n.initialize(i.getMatrixToMaximize()),n.makeAssignments();const e=n.getAssignments(),t=i.getMatrix();let r=document.querySelector("#target-header");r.textContent="Target",r.classList.remove("hidden-td");let a=document.querySelector("#stars-header");a.textContent="Stars",a.classList.remove("hidden-td");let A=0;for(let n=0;n<e.length;n++){let r=e[n],a=document.querySelector("#target-"+n);a.textContent=r+1,a.classList.remove("hidden-td");let i=document.querySelector("#stars-"+n);i.textContent=t[n][r],i.classList.remove("hidden-td"),A+=Number(t[n][r])}o.setStorage(),B(A)},c=()=>{let e=a.getLineup(),t="";n.initialize(i.getMatrixToMaximize()),n.makeAssignments();const r=n.getAssignments(),o=i.getMatrix();let A=0;for(let n=0;n<e.length;n++){let a=e[n].name,i=r[n],l=o[n][i];t+=a+": "+(i+1)+" ("+l+" stars)\n",A+=Number(l)}return t+="Total stars: "+A,t},g=n=>{let e=document.querySelector(".member-capability-popup");e.innerHTML="";let t=a.getLineup()[n],r=(m("div","",t.name,e,"popup-title","title"),m("table","","",e,"standard-table")),o=m("tr","","",r,"odd-row");m("th","","TH",o,"cap-assignment-header"),m("th","","Stars",o,"last-th","cap-assignment-header");for(let e=15;e>=8;e--){let a=m("tr","","",r);e%2==1?a.classList.add("even-row"):a.classList.add("odd-row"),m("td","",e,a,"first-td");let o=m("td","","",a,"last-td"),A=m("input","","",o);A.setAttribute("type","number"),A.setAttribute("min",0),A.setAttribute("max",3),A.value=t.capabilities[15-e],A.addEventListener("change",(()=>{t.editCapability(e,A.value),""!=document.querySelector("#target-1").textContent&&(i.regenerateForMember(n),x(),h())}))}let A=m("div","","",e,"buttons");f(A,"Close"),m("button","","Reset",A,"big-button","popup-button").addEventListener("click",(()=>{t.resetCapability(),g(n),""!=document.querySelector("#target-1").textContent&&(i.regenerateForMember(n),x(),h())}))},b=(n,e)=>{let t=document.createElement("div");return t.classList.add(n),e.appendChild(t),t},m=(n,e,t,r,...a)=>{let i=document.createElement(n);i.id=e,i.textContent=t,r.appendChild(i);for(let n=0;n<a.length;n++)i.classList.add(a[n]);return i},f=(n,e)=>{m("button","",e,n,"big-button","popup-button").addEventListener("click",(()=>{C()}))},h=()=>{document.querySelector(".assignments").style.display="none",document.querySelector(".member-input-div").style.display="none",document.querySelector(".member-capability-popup").style.display="flex",window.scrollTo(0,0),I()},C=()=>{if(document.querySelector(".assignments").style.display="none",document.querySelector(".member-input-div").style.display="block",document.querySelector(".member-capability-popup").style.display="none",window.scrollTo(0,0),""!=document.querySelector("#target-1").textContent){let n=document.querySelector("#total-stars").textContent;B(n.substring(13))}else I()},B=n=>{let e=document.querySelector("#copy-button");e.style.display="inline-block",e.textContent="Copy",document.querySelector("#total-stars").textContent="Total Stars: "+n,document.querySelector("#total-stars").style.display="block"},I=()=>{document.querySelector("#copy-button").style.display="none",document.querySelector("#total-stars").style.display="none"},x=()=>{p(),u()};return{buildLayout:()=>{o.getStorage(),b("header",e).textContent="CWL Assignments";let n=b("main",e);b("member-input-div",n),m("div","","",n,"assignments","popup"),m("div","","",n,"member-capability-popup","popup"),(()=>{let n=document.querySelector(".member-input-div"),e=b("sub-member-input-div",n);m("form","","",e,"member-input"),t()})()}}})();var l=t(379),d=t.n(l),s=t(795),u=t.n(s),p=t(569),c=t.n(p),g=t(565),b=t.n(g),m=t(216),f=t.n(m),h=t(589),C=t.n(h),B=t(28),I={};I.styleTagTransform=C(),I.setAttributes=b(),I.insert=c().bind(null,"head"),I.domAPI=u(),I.insertStyleElement=f(),d()(B.Z,I),B.Z&&B.Z.locals&&B.Z.locals,A.buildLayout()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,